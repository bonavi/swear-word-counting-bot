// Code generated by mockery v2.46.2. DO NOT EDIT.

package service

import (
	context "context"
	model "swearBot/internal/services/saver/model"

	mock "github.com/stretchr/testify/mock"
)

// MockSaverService is an autogenerated mock type for the SaverService type
type MockSaverService struct {
	mock.Mock
}

// SaveChat provides a mock function with given fields: _a0, _a1
func (_m *MockSaverService) SaveChat(_a0 context.Context, _a1 model.SaveChatReq) error {
	ret := _m.Called(_a0, _a1)

	if len(ret) == 0 {
		panic("no return value specified for SaveChat")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, model.SaveChatReq) error); ok {
		r0 = rf(_a0, _a1)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// SaveMessage provides a mock function with given fields: _a0, _a1
func (_m *MockSaverService) SaveMessage(_a0 context.Context, _a1 model.SaveMessageReq) error {
	ret := _m.Called(_a0, _a1)

	if len(ret) == 0 {
		panic("no return value specified for SaveMessage")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, model.SaveMessageReq) error); ok {
		r0 = rf(_a0, _a1)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// SaveUser provides a mock function with given fields: _a0, _a1
func (_m *MockSaverService) SaveUser(_a0 context.Context, _a1 model.SaveUserReq) error {
	ret := _m.Called(_a0, _a1)

	if len(ret) == 0 {
		panic("no return value specified for SaveUser")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, model.SaveUserReq) error); ok {
		r0 = rf(_a0, _a1)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NewMockSaverService creates a new instance of MockSaverService. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockSaverService(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockSaverService {
	mock := &MockSaverService{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
